# This is a basic workflow to help you get started with Actions

name: CI-cygwin

# Controls when the workflow will run
on:
  push:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  simple_build_cygwin:
    runs-on: windows-latest
    steps:
      - name: Setup Git
        shell: cmd
        run: git config --global core.autocrlf input

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Cygwin
        id: cygwin
        uses: cygwin/cygwin-install-action@v6
        with:
          packages: >-
            automake autoconf bash coreutils sed grep findutils pkg-config make gcc-g++ perl python3 \
            tcl-tk-devel tcl-devel libreadline-devel libncurses-devel \
            libX11-devel libX11-xcb-devel libICE-devel libXi-devel libXmu-devel libXext-devel \
            libcairo-devel libGL-devel libGLU-devel zlib-devel

      - name: System Info
        # Windows bash has igncr option, the project should be Unix EOL compatible
        shell: bash --noprofile --norc -e -o pipefail -o igncr {0}
        run: |
          set -o
          set +e
          cygcheck -s
          cygcheck --inst -i cygwin
          cygcheck --inst -i tk-devel
          cygcheck --inst -i tcl-tk-devel
          uname -a
          systeminfo
          cc -v
          ld -v
          make --version
          gmake --version # seems older version
          sed --version
          pwd
          ls -lah
          whoami
          env | grep -v "TOKEN" | grep -v "SECRET" | sort
          nproc=$(nproc)
          export nproc
          echo "nproc=$nproc"

          git config --global --add safe.directory "$(pwd)"

          find . /usr/local /usr -type f \( -name "tkConfig.sh" -or -name "tclConfig.sh" \) -print
          find . /usr/local /usr -type f \( -name "lib*cairo*" -or -name "lib*tk*" -or -name "lib*tcl*" \) -print
          find . /usr/local /usr/include -type f \( -name "tcl.h" -or -iname "Xlib*.h" -or -name "cairo.h" \) -print
          find . /usr/local /usr/share/pkgconfig -type f \( -name "tcl*.pc" -or -name "tk*.pc" -or -name "*cairo*.pc" -or -name "freeglut*.pc" \) -print
          grep cairo_user_to_device /usr/local/include/cairo*.h /usr/local/include/cairo/cairo*.h
          nm -D /usr/local/lib/libcairo.so.* | grep cairo_user_to_device
          # freeglut # not found
          # pthread # not found
          for pkg in x11 cairo freeglut tcl tk pthread; \
          do \
            echo "### pkg-config --libs --cflags ${pkg} :"; \
            pkg-config --libs --cflags "$pkg"; \
          done
          # FIXME The build does not properly use this information above, it was just used a
          # diagnostics to get the build to complete.

          # Help identify files with CRNL EOLs that might not work as expected (--info will report only not change)
          find "$GITHUB_WORKSPACE" -type f \( -name "Makefile" -or -name "*.mak" -or -name "configure" -or -name "*.sh" \) -exec dos2unix --info {} \;

      - name: Build
        shell: bash --noprofile --norc -e -o pipefail -o igncr {0}
        run: |
          set -o pipefail
          set -e

          # /usr/local/lib/tcl8.7/tclConfig.sh
          # /usr/local/lib/tk8.7/tkConfig.sh
          # Need this to provide -I/usr/local/include because tcltk/*.c accesses <X11/Xlib.h>
          # headers but is not using GR_CFLAGS
          # CPPFLAGS want this extra option for depends and compile
          #CPPFLAGS="-I/usr/local/include"
          #export CPPFLAGS
          with_x11_libsdir=$(  pkg-config --libs-only-L   x11    | sed -e 's/-L//g')
          with_x11_incsdir=$(  pkg-config --cflags-only-I x11    | sed -e 's/-I//g')
          with_tcl_libsdir=$(  pkg-config --libs-only-L   tcl    | sed -e 's/-L//g')
          [ -z "$with_tcl_libsdir" ] && with_tcl_libsdir=$(find /usr -type f -name tclConfig.sh -printf "%h\n" | head -n1)
          with_tk_libsdir=$(   pkg-config --libs-only-L   tk     | sed -e 's/-L//g')
          [ -z "$with_tk_libsdir" ] && with_tk_libsdir=$(find /usr -type f -name tkConfig.sh -printf "%h\n" | head -n1)
          with_cairo_libsdir=$(pkg-config --libs-only-L   cairo  | sed -e 's/-L//g') # multiple
          echo --x-libraries=${with_x11_libsdir} --x-includes=${with_x11_incsdir} --with-tcl=${with_tcl_libsdir} --with-tk=${with_tk_libsdir} --with-cairo=/usr/local/include ${with_cairo_libsdir}
          # The only really important ones as --with-tcl and --with-tk the others
          CFLAGS="-std=c17 -g"
          export CFLAGS
          ./configure ${with_x11_libsdir:+--x-libraries=}${with_x11_libsdir} ${with_x11_incsdir:+--x-includes=}${with_x11_incsdir} --with-tcl=${with_tcl_libsdir} --with-tk=${with_tk_libsdir} --with-cairo=/usr/local/include 2>&1 | tee CONFIGURE.LOG
          unset CFLAGS
          unset CPPFLAGS

          echo "===== defs.mak ====="
          cat defs.mak
          echo "===== defs.mak ====="

          make database/database.h
          make 2>&1 | tee MAKE.LOG

      - name: Install
        shell: bash --noprofile --norc -e -o pipefail -o igncr {0}
        run: |
            make install 2>&1 | tee INSTALL.LOG
            find . /usr/local /opt -type f \( -name "magic" -or -name "magicdnull" -or -name "magicexec" -or -name "*magic*.so" \) -exec ldd {} \;

      - name: Kick Tyres Test
        shell: bash --noprofile --norc -e -o pipefail -o igncr {0}
        run: |
            hash -r || true
            PATH="$PATH:/usr/local/bin"
            export PATH
            which magic
            magic --version || true

            echo "version; quit" | magic -T scmos -noconsole -nowindow
            true
