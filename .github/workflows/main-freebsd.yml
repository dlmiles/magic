# This is a basic workflow to help you get started with Actions

name: CI-freebsd

# Controls when the workflow will run
on:
  push:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  simple_build_freebsd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: FreeBSD shell actions
        id: freebsd
        uses: vmactions/freebsd-vm@v1
        with:
          envs: MYENV
          usesh: true
          prepare: |
            echo pkg_add devel/gmake lang/tcl/8.6 x11/tk/8.6 graphics/cairo graphics/freeglut devel/git
            # zlib is in base
            pkg install -y gmake gnugrep gsed tcl87 tk87 cairo freeglut git python3 readline findutils pkgconf
          run: |
            pwd
            ls -lah
            whoami
            env
            freebsd-version
            sysctl hw.model
            sysctl hw.ncpu
            sysctl hw.physmem
            sysctl hw.usermem
            set +e
            uname -a
            cc -v
            ld -v
            nproc=$(sysctl hw.ncpu | sed -e  's/.*=//')
            export nproc
            echo "nproc=$nproc"
            make --version
            gmake --version

            git config --global --add safe.directory "$(pwd)"

            gfind . /usr/local /opt /usr/X11R6 -type f \( -name "tkConfig.sh" -or -name "tclConfig.sh" \) -print
            gfind . /usr/local /opt /usr/X11R6 -type f \( -name "lib*cairo*" -or -name "lib*tk*" -or -name "lib*tcl*" \) -print
            gfind . /usr/local /opt /usr/X11R6 -type f \( -name "tcl.h" -or -iname "Xlib*.h" -or -name "cairo.h" \) -print
            gfind . /usr/local /opt /usr/X11R6 -type f \( -name "tcl*.pc" -or -name "tk*.pc" -or -name "*cairo*.pc" -or -name "freeglut*.pc" \) -print
            ggrep cairo_user_to_device /usr/local/include/cairo*.h /usr/local/include/cairo/cairo*.h
            nm -D /usr/local/lib/libcairo.so.* | grep cairo_user_to_device
            pkg-config --libs --cflags x11
            pkg-config --libs --cflags cairo
            pkg-config --libs --cflags freeglut
            pkg-config --libs --cflags tcl87
            pkg-config --libs --cflags tk
            pkg-config --libs --cflags pthread
            # FIXME The build does not propertly use this information above, it was just used a
            # diagnostics to get the build to complete.

            # /usr/local/lib/tcl8.7/tclConfig.sh
            # /usr/local/lib/tk8.7/tkConfig.sh
            # Need this to provide -I/usr/local/include because tcltk/*.c accesses <X11/Xlib.h>
            # headers but is not using GR_CFLAGS
            # CPPFLAGS want this extra option for depends and compile
            CPPFLAGS="-I/usr/local/include"
            export CPPFLAGS
            ./configure --x-libraries=/usr/local/lib --x-includes=/usr/local/include --with-tcl=/usr/local/lib/tcl8.7 --with-tk=/usr/local/lib/tk8.7 --with-cairo=/usr/local/include 2>&1 | tee CONFIGURE.LOG
            unset CPPFLAGS

            echo "===== defs.mak ====="
            cat defs.mak
            echo "===== defs.mak ====="

            gmake database/database.h
            gmake 2>&1 | tee MAKE.LOG

            gmake install 2>&1 | tee INSTALL.LOG
            
            gfind . /usr/local /opt -type f \( -name "magic" -or -name "magicdnull" -or -name "magicexec" -or -name "*magic*.so" \) -exec ldd {} \;

            hash -r || true
            PATH="$PATH:/usr/local/bin"
            export PATH
            which magic
            magic --version || true

            echo "version; quit" | magic -T scmos -noconsole -nowindow
            true
